{
	"info": {
		"_postman_id": "706b79fb-396b-41aa-b6aa-2ab3251aded2",
		"name": "retail-sample-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create-item-type",
			"item": [
				{
					"name": "create-fruits-inbound-item-types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 201\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \"apple\", \"pear\"]"
						},
						"url": {
							"raw": "localhost:8080/inbound/config",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "check-item-type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75ca381f-7e07-4402-a47d-3171f54133ee",
								"exec": [
									"pm.test(\"response should contain the fruits\", function () {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.json;",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.map(toType)).to.include.members([\"apple\", \"pear\"]);",
									"});",
									"",
									"function toType(i) {",
									"    return i.type",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/inbound/config",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "disable-create-item-type",
			"item": [
				{
					"name": "create-item-type-banana",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 201\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \"banana\"]"
						},
						"url": {
							"raw": "localhost:8080/inbound/config",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "disable-item-type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 201\", function() {",
									"    pm.response.to.have.status(202)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\tdisabled: true\n}\n"
						},
						"url": {
							"raw": "localhost:8080/inbound/config/banana/disable",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config",
								"banana",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "check-item-type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75ca381f-7e07-4402-a47d-3171f54133ee",
								"exec": [
									"pm.test(\"response should contain the fruits\", function () {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.json;",
									"    ",
									"    let jsonData = pm.response.json();",
									"    pm.expect(jsonData.disabled).to.equal(true)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/inbound/config/banana",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config",
								"banana"
							]
						}
					},
					"response": []
				},
				{
					"name": "check-non-existent-item-type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75ca381f-7e07-4402-a47d-3171f54133ee",
								"exec": [
									"pm.test(\"Should return NOT FOUND\", function() {",
									"    pm.response.to.have.status(404)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/inbound/config/dragonfruit",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config",
								"dragonfruit"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fbdb746d-26ac-45fa-a142-835f45f0feb0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "02a75e41-3e50-46bd-bf2a-dc6de7d338ff",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "provision-stock",
			"item": [
				{
					"name": "create-fruits-inbound-item-types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 201\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \"orange\", \"kiwi\"]"
						},
						"url": {
							"raw": "localhost:8080/inbound/config",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "provision-fruits",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 202\", function() {",
									"    pm.response.to.have.status(202)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orange\": 3, \n\t\"kiwi\": 4\n}"
						},
						"url": {
							"raw": "localhost:8080/inbound",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "list-inbound",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should succeed\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"Should have oranges and kiwis provisions\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.json;",
									"    let body = JSON.parse(responseBody);",
									"    ",
									"    let expected = [",
									"        {",
									"            name: \"orange\",",
									"            qty: 3",
									"        },",
									"        {",
									"            name: 'kiwi',",
									"            qty: 4",
									"        }",
									"    ]",
									"",
									"    pm.expect(body.inbounds.map(dropTime)).to.be.an('array')",
									"       .that.deep.includes(expected[0])",
									"        .and.deep.includes(expected[1])",
									"})",
									"",
									"function dropTime(e) {",
									"    return {",
									"        name: e.name,",
									"        qty: e.qty",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orange\": 3, \n\t\"kiwi\": 4\n}"
						},
						"url": {
							"raw": "localhost:8080/inbound",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "check-stock-for-fruits",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 200\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"Should have oranges and kiwis\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.json;",
									"        ",
									"    let body = JSON.parse(responseBody);",
									"    ",
									"    let orange = {",
									"        name: \"orange\",",
									"        qty: 3",
									"    }",
									"    ",
									"    let kiwi = {",
									"        name: 'kiwi',",
									"        qty: 4",
									"    }",
									"",
									"    pm.expect(body.data).to.be.an('array')",
									"        .that.deep.includes(orange)",
									"        .and.deep.includes(kiwi)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \"apple\", \"pear\"]"
						},
						"url": {
							"raw": "localhost:8080/stock",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stock"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "outbound",
			"item": [
				{
					"name": "create-veggies-inbound-item-types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 201\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ \"carrot\", \"onion\"]"
						},
						"url": {
							"raw": "localhost:8080/inbound/config",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "provision-fruits",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 202\", function() {",
									"    pm.response.to.have.status(202)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"carrot\": 3, \n\t\"onion\": 4\n}"
						},
						"url": {
							"raw": "localhost:8080/inbound",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "config-outbound",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 201\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"salad\",\n\t\"items\": {\n\t\t\"carrot\": 2, \n\t\t\"onion\": 3\n\t}\n}"
						},
						"url": {
							"raw": "localhost:8080/outbound/config",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"outbound",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "sell-salad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 204\", function() {",
									"    pm.response.to.have.status(204)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"salad\",\n\t\"qty\": 1\n}"
						},
						"url": {
							"raw": "localhost:8080/outbound",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"outbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "sell-more-salad-fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 400\", function() {",
									"    pm.response.to.have.status(400)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"salad\",\n\t\"qty\": 1\n}"
						},
						"url": {
							"raw": "localhost:8080/outbound",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"outbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "check-stock-for-fruits",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c31e861-0575-44aa-bc79-654149ef2864",
								"exec": [
									"pm.test(\"Should return 200\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"Should have oranges and kiwis\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.json;",
									"    ",
									"    let body = JSON.parse(responseBody);",
									"    ",
									"    let oneCarrot = {",
									"        name: \"carrot\",",
									"        qty: 1",
									"    }",
									"    ",
									"    let oneOnion = {",
									"        name: 'onion',",
									"        qty: 1",
									"    }",
									"",
									"    pm.expect(body.data).to.be.an('array')",
									"        .that.deep.includes(oneCarrot)",
									"        .and.deep.includes(oneOnion)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:8080/stock",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"stock"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "health",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75ca381f-7e07-4402-a47d-3171f54133ee",
						"exec": [
							"pm.test(\"response should be 200\", function () {",
							"    pm.response.to.be.ok;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8081/health",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"health"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}